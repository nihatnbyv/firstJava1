CREATE TABLE Employees
(
    EmployeeID SERIAL PRIMARY KEY,
    FirstName  VARCHAR(50),
    LastName   VARCHAR(50),
    Position   VARCHAR(50),
    Salary     DECIMAL(10, 2)
);

CREATE TABLE Customers
(
    CustomerID SERIAL PRIMARY KEY,
    Name       VARCHAR(50),
    Email      VARCHAR(50),
    Phone      VARCHAR(20)
);

CREATE TABLE Orders
(
    OrderID     SERIAL PRIMARY KEY,
    OrderNumber VARCHAR(20),

    OrderDate   DATE,
    OrderPrice  DECIMAL(10, 2),
    Status      VARCHAR(20),
    CustomerID  INT,
    FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)
);

CREATE TABLE Products
(
    ProductID SERIAL PRIMARY KEY,
    Name      VARCHAR(50),
    Price     DECIMAL(10, 2),
    Category  VARCHAR(50)
);

CREATE TABLE Sales
(
    SaleID    SERIAL PRIMARY KEY,
    ProductID INT,
    Quantity  INT,
    Price     DECIMAL(10, 2),
    Revenue   DECIMAL(10, 2),
    FOREIGN KEY (ProductID) REFERENCES Products (ProductID)
);

CREATE TABLE Inventory
(
    ProductID SERIAL PRIMARY KEY,
    Quantity  INT,
    FOREIGN KEY (ProductID) REFERENCES Products (ProductID)
);

INSERT INTO Employees (FirstName, LastName, Position, Salary)
VALUES ('John', 'Doe', 'Manager', 5000.00),
       ('Jane', 'Smith', 'Salesperson', 3000.00),
       ('Mike', 'Johnson', 'Technician', 2500.00);

INSERT INTO Customers (Name, Email, Phone)
VALUES ('Acme Corp', 'info@acme.com', '123-456-7890'),
       ('XYZ Company', 'info@xyz.com', '987-654-3210'),
       ('ABC Enterprises', 'info@abc.com', '555-555-5555');

INSERT INTO Orders (OrderNumber, OrderDate, OrderPrice, Status, CustomerID)
VALUES ('ORD001', '2023-06-01', 1000.00, 'Completed', 1),
       ('ORD002', '2023-06-05', 500.00, 'Completed', 2),
       ('ORD003', '2023-06-10', 750.00, 'Pending', 3);

INSERT INTO Products (Name, Price, Category)
VALUES ('Product A', 10.99, 'Electronics'),
       ('Product B', 25.99, 'Home & Garden'),
       ('Product C', 5.99, 'Books');

INSERT INTO Sales (ProductID, Quantity, Price, Revenue)
VALUES (1, 10, 10.99, 109.90),
       (2, 5, 25.99, 129.95),
       (3, 20, 5.99, 119.80);

INSERT INTO Inventory (ProductID, Quantity)
VALUES (1, 100),
       (2, 50),
       (3, 200);

/*
1. Write an SQL query that selects all the data from the "Employees" table
and displays the result.
*/

select *
from Employees;

/*
2. Write an SQL query that selects and displays the names and email
addresses of all customers from the "Customers" table.
*/

select Name, Email
from Customers;

/*
3. Write an SQL query that selects the information about orders from the
"Orders" table with a status of "Completed".
*/

select *
from Orders
where Status = 'Completed';

/*
4. Write an SQL query that selects the name and price of all products from the
"Products" table in the "Electronics" category.
*/

select Name, Price
from Products
where Category = 'Electronics';

/*
5. Write an SQL query that selects the total revenue (Revenue) from the
"Sales" table for each sale.
*/

select SaleID, sum(Quantity * Price) as TotalRevenue
from Sales
group by SaleID;

/*
6. Write an SQL query that selects the total quantity of items (Quantity) from
the "Inventory" table for each product.
*/

select ProductID, sum(Quantity) as TotalQuantity
from Inventory
group by ProductID;

/*
7. Write an SQL query that selects and displays the full name (FirstName and
LastName) of all employees with the position "Manager".
*/

-- Şərti tam başa düşmədiyim üçün 2 cür yazdım.

select (FirstName, LastName) as FullName
from Employees
where Position = 'Manager';

select FirstName, LastName
from Employees
where Position = 'Manager';

/*
 8. Write an SQL query that selects the information about orders from the
"Orders" table for a customer with the identifier (CustomerID) equal to 2.
*/

select *
from Orders
where CustomerID = 2;

/*
9. Write an SQL query that selects the information about products and the
quantity of sales from the "Sales" table where the quantity of sales is
greater than 10.
*/

select ProductID, Quantity, Price, Revenue
from Sales
where Quantity > 10;

/*
10. Write an SQL query that selects the most expensive product (Product) from
the "Products" table based on the price.
*/

select *
from Products
order by Price desc
limit 1;